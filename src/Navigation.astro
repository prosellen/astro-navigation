---
import NavigationList from "./NavigationList.astro";
import getDependencyGraph from "./utils/getDependencyGraph";
import enrichNavigationItems from "./utils/enrichNavigationItems";
import { NavigationItems } from "./types";
import getUrlForLevel from "./utils/getUrlForLevel";
import getNavigationForStartUrl from "./utils/getNavigationForStartUrl";

export interface Props extends astroHTML.JSX.AstroBuiltinAttributes {
  navigationItems: NavigationItems;
  startLevel?: number;
  currentLevel?: number;
  maxLevel?: number;
}

const {
  navigationItems,
  startLevel = 1,
  maxLevel = 999,
} = Astro.props as Props;
const currentLevel = 1;

// const filterNavigationItems = async function (navigationItems) {
//   const allFiles = await Astro.glob("/src/pages/**/*.astro");
//   allFiles.forEach((file) => console.log(file.file));
//   return navigationItems;
// };

// const filteredNavigationItems = await filterNavigationItems(navigationItems);

const enrichedNavigationItems = enrichNavigationItems(navigationItems);
const dependenyGraph = getDependencyGraph(enrichedNavigationItems);

const currentUrl = Astro.url.pathname;
const dependencies = dependenyGraph.dependenciesOf(currentUrl);

let items;
if (startLevel && startLevel > 0) {
  const startUrl = getUrlForLevel(currentUrl, startLevel, dependenyGraph);

  items = getNavigationForStartUrl(startUrl, dependenyGraph);
  console.log({ startUrl, items });
} else {
  items = enrichedNavigationItems;
}

console.log(items);
---

<NavigationList
  navigationItems={items}
  dependencies={dependencies}
  currentLevel={currentLevel}
  startLevel={startLevel}
  maxLevel={maxLevel}
/>
